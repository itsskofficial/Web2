# src/backend/migrations/versions/a6a1b2c3d4e5_create_population_cache_table.py
"""Create population_cache table

Revision ID: a6a1b2c3d4e5
Revises: 
Create Date: 2024-05-20 12:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a6a1b2c3d4e5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('population_cache',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address_key', sa.String(), nullable=False),
    sa.Column('response_data', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_population_cache_address_key'), 'population_cache', ['address_key'], unique=True)
    op.create_index(op.f('ix_population_cache_id'), 'population_cache', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_population_cache_id'), table_name='population_cache')
    op.drop_index(op.f('ix_population_cache_address_key'), table_name='population_cache')
    op.drop_table('population_cache')
    # ### end Alembic commands ###